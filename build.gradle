plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

mod_version = "${mod_version}." + (System.getenv("BUILD_NUMBER") ?: "1")
version = "${minecraft_version}-${mod_version}"
group = "dev.dr0n1k.${mod_id}"
archivesBaseName = "${mod_id}"

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'official', version: "${minecraft_version}"

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            mods {
                source sourceSets.main
            }
        }

        server {
            workingDirectory project.file('run')

            mods {
                source sourceSets.main
            }
        }

        data {
            workingDirectory project.file('run')

            args '--mod', "${mod_id}", '--all',
                    '--output', file('src/generated/resources/'),
                    '--existing', file('src/main/resources/')

            mods {
                source sourceSets.main
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { // CoFH
        url 'https://maven.covers1624.net/'
    }
    maven { // TOP
        url 'https://maven.k-4u.nl/'
    }
    maven { // JEI
        url 'https://dvs1.progwml6.com/files/maven/'
    }
    maven { // Patchouli
        url 'https://maven.blamejared.com/'
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    implementation fg.deobf("com.teamcofh:cofh_core:${minecraft_version}-${cofh_core_version}")
    implementation fg.deobf("com.teamcofh:thermal_core:${minecraft_version}-${thermal_core_version}")
    implementation fg.deobf("com.teamcofh:thermal_foundation:${minecraft_version}-${thermal_foundation_version}")
    implementation fg.deobf("com.teamcofh:thermal_expansion:${minecraft_version}-${thermal_expansion_version}")
    implementation fg.deobf("com.teamcofh:thermal_cultivation:${minecraft_version}-${thermal_cultivation_version}")

    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge-api:${jei_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}-common:${jei_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge:${jei_version}")

    //implementation fg.deobf("mcjty.theoneprobe:theoneprobe:${top_version}")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "${mod_name}",
                "Specification-Vendor"    : "dr0n1k",
                "Specification-Version"   : "${minecraft_version}",
                "Implementation-Title"    : "${mod_id}",
                "Implementation-Vendor"   : "dr0n1k",
                "Implementation-Version"  : "${mod_version}",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
